
name: scrpt test cicde - dispatch

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'    
        required: true
        default: 'warning'
      tag:
        description: 'git tag'
        default: '0.0.0'

jobs:
  script-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get package name
        run: echo "PACKAGE_NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV

      - name: Run script - sub script with output
        id: bash-simple
        run: |
          echo ${{ env.PACKAGE_NAME }}
          export LOG_LEVEL=${{ github.event.inputs.logLevel }}
          echo "Tag: ${{ github.event.inputs.tag }}"
          bash ./scripts/simple.sh

      - name: Run script - array and github api
        id: bash-github-api
        run: |
          array=(
            "element1"
            "element2"
            "element3"
          )
          for i in "${array[@]}"
          do
            echo "$i"
          done
          gh api repos/heons/test-cicd/dispatches -X=POST -H "Accept: application/vnd.github+json" --field event_type=dispatch-release-packages --field client_payload='{"prTitle": "pr title"}''
        # shell: bash
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Run when success
        if: steps.bash-simple.outputs.status == 'success'
        run: |
          echo success

      - name: Run when failure
        if: steps.bash-simple.outputs.status == 'failure'
        run: |
          echo failure

      - name: Check if tag exists
        uses: uruz-7/tag-exists-action@v2
        id: check-tag
        with:
          tag: ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      tagExists: ${{ steps.check-tag.outputs.exists }}
      
  checkout_release_and_add_tag:
    if: ${{ needs.script-test.outputs.tagExists == 'false' }}
    needs: script-test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps: 
      - name: Checkout repository - release
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          ref: release

      - name: Checkout release and create a tag
        run: |
            git tag ${{ github.event.inputs.tag }}
            git push --tags